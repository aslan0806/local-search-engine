package searchengine.services.indexing;

import lombok.RequiredArgsConstructor;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Component;
import searchengine.model.SiteEntity;

import java.util.HashSet;
import java.util.Set;

@Component
@RequiredArgsConstructor
public class SiteCrawler {

    private final IndexingTask indexingTask;

    private final Set<String> visitedUrls = new HashSet<>();

    public void crawl(String url, SiteEntity site) {
        if (visitedUrls.contains(url)) return;
        visitedUrls.add(url);

        try {
            // ‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            Document doc = Jsoup.connect(url).get();

            // üî§ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            indexingTask.indexPage(url, site);

            // üîó –°–±–æ—Ä –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
            Elements links = doc.select("a[href]");
            for (Element link : links) {
                String href = link.attr("abs:href");

                // ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
                if (href.startsWith(site.getUrl()) &&
                        !href.contains("#") &&
                        !href.endsWith(".pdf") &&
                        !href.endsWith(".jpg") &&
                        !href.endsWith(".png") &&
                        !href.endsWith(".jpeg")) {
                    crawl(href, site); // üîÅ –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤
                }
            }

        } catch (Exception e) {
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ö–æ–¥–µ " + url + ": " + e.getMessage());
        }
    }

    public void clearVisited() {
        visitedUrls.clear(); // üîÑ —Å–±—Ä–æ—Å –º–µ–∂–¥—É —Å–∞–π—Ç–∞–º–∏
    }
}